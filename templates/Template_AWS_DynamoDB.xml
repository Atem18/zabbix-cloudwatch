<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>3.0</version>
    <date>2016-05-19T20:42:37Z</date>
    <groups>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template AWS DynamoDB</template>
            <name>Template AWS DynamoDB</name>
            <description>AWS DynamoDB monitoring</description>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>DynamoDB</name>
                </application>
            </applications>
            <items/>
            <discovery_rules>
                <discovery_rule>
                    <name>DynamoDB Table Discovery</name>
                    <type>10</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>awsLLD.sh[&quot;{$AWS_ACCOUNT}&quot;,&quot;{$AWS_REGION}&quot;,&quot;DynamoDBTables&quot;,&quot;{$COMPONENT_DYNAMODB}&quot;]</key>
                    <delay>43200</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>1</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>DynamoDB::$3::BatchGet::Latency::Average</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.BatchGetItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>ms</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::BatchGet::System Error Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.BatchGetItem.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of requests generating a 500 status code (likely indicating a server error) response in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::BatchGet::Throttled Request Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.BatchGetItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of user requests that exceeded the preset provisioned throughput limits in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::BatchWrite::Latency::Average</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.BatchWriteItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>ms</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::BatchWrite::System Error Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.BatchWriteItem.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of requests generating a 500 status code (likely indicating a server error) response in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::BatchWrite::Throttled Request Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.BatchWriteItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of user requests that exceeded the preset provisioned throughput limits in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Conditional Check Failed Request Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.ConditionalCheckFailedRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of failed attempts to perform conditional writes. The PutItem, UpdateItem, and DeleteItem operations let you provide a logical condition that must evaluate to true before the operation can proceed. If this condition evaluates to false, then ConditionalCheckFailedRequests is incremented by one.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Consumed Read Throughput</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.ConsumedReadCapacityUnits.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of read capacity units consumed over the specified time period, so you can track how much of your provisioned throughput is used.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Consumed Write Thoughtput</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.ConsumedWriteCapacityUnits.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of write capacity units consumed over the specified time period, so you can track how much of your provisioned throughput is used.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Delete::Latency::Average</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.DeleteItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>ms</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Delete::System Error Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.DeleteItem.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of requests generating a 500 status code (likely indicating a server error) response in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Delete::Throttled Request Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.DeleteItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of user requests that exceeded the preset provisioned throughput limits in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Get::Latency::Average</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.GetItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>ms</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Get::System Error Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.GetItem.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of requests generating a 500 status code (likely indicating a server error) response in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Get::Throttled Request Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.GetItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of user requests that exceeded the preset provisioned throughput limits in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Provisioned Read Capacity</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.ProvisionedReadCapacityUnits.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Provisioned Write Capacity</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.ProvisionedWriteCapacityUnits.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Put::Latency::Average</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.PutItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>ms</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Put::System Error Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.PutItem.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of requests generating a 500 status code (likely indicating a server error) response in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Put::Throttled Request Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.PutItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of user requests that exceeded the preset provisioned throughput limits in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Query::Returned Item Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.Query.ReturnedItemCount.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Query::Latency::Average</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.Query.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>ms</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Query::System Error Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.Query.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of requests generating a 500 status code (likely indicating a server error) response in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Query::Throttled Request Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.Query.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of user requests that exceeded the preset provisioned throughput limits in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::ReadThrottleEvents Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.ReadThrottleEvents.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of read events that exceeded the preset provisioned throughput limits in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Scan::Returned Item Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.Scan.ReturnedItemCount.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Scan::Latency::Average</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.Scan.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>ms</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Scan::System Error Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.Scan.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of requests generating a 500 status code (likely indicating a server error) response in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Scan::Throttled Request Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.Scan.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of user requests that exceeded the preset provisioned throughput limits in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Update::Latency::Average</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.UpdateItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>ms</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Update::System Error Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.UpdateItem.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of requests generating a 500 status code (likely indicating a server error) response in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::Update::Throttled Request Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.UpdateItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of user requests that exceeded the preset provisioned throughput limits in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>DynamoDB::$3::WriteThrottleEvents Rate</name>
                            <type>2</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>DynamoDB.WriteThrottleEvents.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                            <delay>0</delay>
                            <history>15</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>req/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.00333333333333333333</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of write events that exceeded the preset provisioned throughput limits in the specified time period.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.BatchGetItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::BatchGet::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.BatchGetItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P4} and {Template AWS DynamoDB:DynamoDB.BatchGetItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&lt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::BatchGet::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.BatchWriteItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::BatchWrite::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.BatchWriteItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P4} and {Template AWS DynamoDB:DynamoDB.BatchWriteItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&lt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::BatchWrite::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.DeleteItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::Delete::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.DeleteItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P4} and {Template AWS DynamoDB:DynamoDB.DeleteItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&lt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::Delete::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.GetItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::Get::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.GetItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P4} and {Template AWS DynamoDB:DynamoDB.GetItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&lt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::Get::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.ConsumedReadCapacityUnits.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{Template AWS DynamoDB:DynamoDB.ProvisionedReadCapacityUnits.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::Provisioned read throughput for the table was exceeded(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.ConsumedWriteCapacityUnits.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{Template AWS DynamoDB:DynamoDB.ProvisionedWriteCapacityUnits.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::Provisioned write throughput for the table was exceeded(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.PutItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::Put::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.PutItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P4} and {Template AWS DynamoDB:DynamoDB.PutItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&lt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::Put::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.Query.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::Query::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.Query.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P4} and {Template AWS DynamoDB:DynamoDB.Query.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&lt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::Query::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.ReadThrottleEvents.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_READ_THROTTLE_EVENTS_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::ReadThrottleEvents::Alert(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>The number of read events that exceeded the preset provisioned throughput limits in the specified time period.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.ReadThrottleEvents.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_READ_THROTTLE_EVENTS_P4} and {Template AWS DynamoDB:DynamoDB.ReadThrottleEvents.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&lt;{$TH_READ_THROTTLE_EVENTS_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::ReadThrottleEvents::Alert(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>The number of read events that exceeded the preset provisioned throughput limits in the specified time period.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.Scan.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::Scan::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.Scan.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P4} and {Template AWS DynamoDB:DynamoDB.Scan.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&lt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::Scan::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.UpdateItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::Update::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.UpdateItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_LATENCY_P4} and {Template AWS DynamoDB:DynamoDB.UpdateItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&lt;{$TH_LATENCY_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::Update::Latency(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>The number of successful requests in the specified time period. By default, SuccessfulRequestLatency provides the elapsed time for successful calls.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.WriteThrottleEvents.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_WRITE_THROTTLE_EVENTS_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::WriteThrottleEvents::Alert(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>The number of read events that exceeded the preset provisioned throughput limits in the specified time period.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template AWS DynamoDB:DynamoDB.WriteThrottleEvents.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&gt;{$TH_WRITE_THROTTLE_EVENTS_P4} and {Template AWS DynamoDB:DynamoDB.WriteThrottleEvents.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;].last()}&lt;{$TH_WRITE_THROTTLE_EVENTS_P3}</expression>
                            <name>DynamoDB::{#TABLE_NAME}::WriteThrottleEvents::Alert(LV={ITEM.VALUE})</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>The number of read events that exceeded the preset provisioned throughput limits in the specified time period.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>{#TABLE_NAME}::Conditional Check Failed</name>
                            <width>500</width>
                            <height>200</height>
                            <yaxismin>0.0000</yaxismin>
                            <yaxismax>100.0000</yaxismax>
                            <show_work_period>1</show_work_period>
                            <show_triggers>1</show_triggers>
                            <type>0</type>
                            <show_legend>1</show_legend>
                            <show_3d>0</show_3d>
                            <percent_left>0.0000</percent_left>
                            <percent_right>0.0000</percent_right>
                            <ymin_type_1>1</ymin_type_1>
                            <ymax_type_1>0</ymax_type_1>
                            <ymin_item_1>0</ymin_item_1>
                            <ymax_item_1>0</ymax_item_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>0</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>00C800</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.ConditionalCheckFailedRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>{#TABLE_NAME}::Overview</name>
                            <width>900</width>
                            <height>400</height>
                            <yaxismin>0.0000</yaxismin>
                            <yaxismax>100.0000</yaxismax>
                            <show_work_period>1</show_work_period>
                            <show_triggers>1</show_triggers>
                            <type>0</type>
                            <show_legend>1</show_legend>
                            <show_3d>0</show_3d>
                            <percent_left>0.0000</percent_left>
                            <percent_right>0.0000</percent_right>
                            <ymin_type_1>1</ymin_type_1>
                            <ymax_type_1>0</ymax_type_1>
                            <ymin_item_1>0</ymin_item_1>
                            <ymax_item_1>0</ymax_item_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>0</sortorder>
                                    <drawtype>5</drawtype>
                                    <color>FFCCCC</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.ProvisionedReadCapacityUnits.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>5</drawtype>
                                    <color>CCFFCC</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.ProvisionedWriteCapacityUnits.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>4</drawtype>
                                    <color>00C8C8</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.BatchGetItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <drawtype>4</drawtype>
                                    <color>C8C800</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.BatchWriteItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <drawtype>4</drawtype>
                                    <color>C8C8C8</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.DeleteItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>5</sortorder>
                                    <drawtype>4</drawtype>
                                    <color>009600</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.GetItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>6</sortorder>
                                    <drawtype>4</drawtype>
                                    <color>960000</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.PutItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>7</sortorder>
                                    <drawtype>4</drawtype>
                                    <color>000096</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.Query.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>8</sortorder>
                                    <drawtype>4</drawtype>
                                    <color>960096</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.ReadThrottleEvents.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>9</sortorder>
                                    <drawtype>4</drawtype>
                                    <color>009696</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.Scan.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>10</sortorder>
                                    <drawtype>5</drawtype>
                                    <color>969600</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.UpdateItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>11</sortorder>
                                    <drawtype>2</drawtype>
                                    <color>BB0000</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.ConsumedReadCapacityUnits.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>12</sortorder>
                                    <drawtype>2</drawtype>
                                    <color>00BB00</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.ConsumedWriteCapacityUnits.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>{#TABLE_NAME}::Read Capacity</name>
                            <width>500</width>
                            <height>200</height>
                            <yaxismin>0.0000</yaxismin>
                            <yaxismax>100.0000</yaxismax>
                            <show_work_period>1</show_work_period>
                            <show_triggers>1</show_triggers>
                            <type>0</type>
                            <show_legend>1</show_legend>
                            <show_3d>0</show_3d>
                            <percent_left>0.0000</percent_left>
                            <percent_right>0.0000</percent_right>
                            <ymin_type_1>1</ymin_type_1>
                            <ymax_type_1>0</ymax_type_1>
                            <ymin_item_1>0</ymin_item_1>
                            <ymax_item_1>0</ymax_item_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>0</sortorder>
                                    <drawtype>5</drawtype>
                                    <color>00C800</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.ProvisionedReadCapacityUnits.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>5</drawtype>
                                    <color>C80000</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.ConsumedReadCapacityUnits.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>{#TABLE_NAME}::Read Errors</name>
                            <width>500</width>
                            <height>200</height>
                            <yaxismin>0.0000</yaxismin>
                            <yaxismax>100.0000</yaxismax>
                            <show_work_period>1</show_work_period>
                            <show_triggers>1</show_triggers>
                            <type>0</type>
                            <show_legend>1</show_legend>
                            <show_3d>0</show_3d>
                            <percent_left>0.0000</percent_left>
                            <percent_right>0.0000</percent_right>
                            <ymin_type_1>1</ymin_type_1>
                            <ymax_type_1>0</ymax_type_1>
                            <ymin_item_1>0</ymin_item_1>
                            <ymax_item_1>0</ymax_item_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>0</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>C80000</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.GetItem.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>0000C8</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.Query.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>C800C8</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.Scan.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>00C800</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.BatchGetItem.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>{#TABLE_NAME}::Read Latency</name>
                            <width>500</width>
                            <height>200</height>
                            <yaxismin>0.0000</yaxismin>
                            <yaxismax>100.0000</yaxismax>
                            <show_work_period>1</show_work_period>
                            <show_triggers>1</show_triggers>
                            <type>0</type>
                            <show_legend>1</show_legend>
                            <show_3d>0</show_3d>
                            <percent_left>0.0000</percent_left>
                            <percent_right>0.0000</percent_right>
                            <ymin_type_1>0</ymin_type_1>
                            <ymax_type_1>0</ymax_type_1>
                            <ymin_item_1>0</ymin_item_1>
                            <ymax_item_1>0</ymax_item_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>0</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>C80000</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.GetItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>0000C8</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.Query.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>C800C8</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.Scan.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>00C800</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.BatchGetItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>{#TABLE_NAME}::Returned Item Rate</name>
                            <width>500</width>
                            <height>200</height>
                            <yaxismin>0.0000</yaxismin>
                            <yaxismax>100.0000</yaxismax>
                            <show_work_period>1</show_work_period>
                            <show_triggers>1</show_triggers>
                            <type>0</type>
                            <show_legend>1</show_legend>
                            <show_3d>0</show_3d>
                            <percent_left>0.0000</percent_left>
                            <percent_right>0.0000</percent_right>
                            <ymin_type_1>1</ymin_type_1>
                            <ymax_type_1>0</ymax_type_1>
                            <ymin_item_1>0</ymin_item_1>
                            <ymax_item_1>0</ymax_item_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>0</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>00C800</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.Query.ReturnedItemCount.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>C80000</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.Scan.ReturnedItemCount.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>{#TABLE_NAME}::Throttled Events</name>
                            <width>500</width>
                            <height>200</height>
                            <yaxismin>0.0000</yaxismin>
                            <yaxismax>100.0000</yaxismax>
                            <show_work_period>1</show_work_period>
                            <show_triggers>1</show_triggers>
                            <type>0</type>
                            <show_legend>1</show_legend>
                            <show_3d>0</show_3d>
                            <percent_left>0.0000</percent_left>
                            <percent_right>0.0000</percent_right>
                            <ymin_type_1>1</ymin_type_1>
                            <ymax_type_1>0</ymax_type_1>
                            <ymin_item_1>0</ymin_item_1>
                            <ymax_item_1>0</ymax_item_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>0</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>00C800</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.ReadThrottleEvents.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>C80000</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.WriteThrottleEvents.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>{#TABLE_NAME}::Throttled Read Requests</name>
                            <width>500</width>
                            <height>200</height>
                            <yaxismin>0.0000</yaxismin>
                            <yaxismax>100.0000</yaxismax>
                            <show_work_period>1</show_work_period>
                            <show_triggers>1</show_triggers>
                            <type>0</type>
                            <show_legend>1</show_legend>
                            <show_3d>0</show_3d>
                            <percent_left>0.0000</percent_left>
                            <percent_right>0.0000</percent_right>
                            <ymin_type_1>1</ymin_type_1>
                            <ymax_type_1>0</ymax_type_1>
                            <ymin_item_1>0</ymin_item_1>
                            <ymax_item_1>0</ymax_item_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>0</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>C80000</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.GetItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>C800C8</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.Scan.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>0000C8</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.Query.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>00C800</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.BatchGetItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>{#TABLE_NAME}::Throttled Write Requests</name>
                            <width>500</width>
                            <height>200</height>
                            <yaxismin>0.0000</yaxismin>
                            <yaxismax>100.0000</yaxismax>
                            <show_work_period>1</show_work_period>
                            <show_triggers>1</show_triggers>
                            <type>0</type>
                            <show_legend>1</show_legend>
                            <show_3d>0</show_3d>
                            <percent_left>0.0000</percent_left>
                            <percent_right>0.0000</percent_right>
                            <ymin_type_1>1</ymin_type_1>
                            <ymax_type_1>0</ymax_type_1>
                            <ymin_item_1>0</ymin_item_1>
                            <ymax_item_1>0</ymax_item_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>0</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>0000C8</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.PutItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>C800C8</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.UpdateItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>C80000</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.DeleteItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>00C800</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.BatchWriteItem.ThrottledRequests.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>{#TABLE_NAME}::Write Capacity</name>
                            <width>500</width>
                            <height>200</height>
                            <yaxismin>0.0000</yaxismin>
                            <yaxismax>100.0000</yaxismax>
                            <show_work_period>1</show_work_period>
                            <show_triggers>1</show_triggers>
                            <type>0</type>
                            <show_legend>1</show_legend>
                            <show_3d>0</show_3d>
                            <percent_left>0.0000</percent_left>
                            <percent_right>0.0000</percent_right>
                            <ymin_type_1>1</ymin_type_1>
                            <ymax_type_1>0</ymax_type_1>
                            <ymin_item_1>0</ymin_item_1>
                            <ymax_item_1>0</ymax_item_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>0</sortorder>
                                    <drawtype>5</drawtype>
                                    <color>00C800</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.ProvisionedWriteCapacityUnits.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>5</drawtype>
                                    <color>C80000</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.ConsumedWriteCapacityUnits.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>{#TABLE_NAME}::Write Errors</name>
                            <width>500</width>
                            <height>200</height>
                            <yaxismin>0.0000</yaxismin>
                            <yaxismax>100.0000</yaxismax>
                            <show_work_period>1</show_work_period>
                            <show_triggers>1</show_triggers>
                            <type>0</type>
                            <show_legend>1</show_legend>
                            <show_3d>0</show_3d>
                            <percent_left>0.0000</percent_left>
                            <percent_right>0.0000</percent_right>
                            <ymin_type_1>1</ymin_type_1>
                            <ymax_type_1>0</ymax_type_1>
                            <ymin_item_1>0</ymin_item_1>
                            <ymax_item_1>0</ymax_item_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>0</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>0000C8</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.PutItem.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>C80000</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.DeleteItem.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>C800C8</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.UpdateItem.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>00C800</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.BatchWriteItem.SystemErrors.Sum[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>{#TABLE_NAME}::Write Latency</name>
                            <width>500</width>
                            <height>200</height>
                            <yaxismin>0.0000</yaxismin>
                            <yaxismax>100.0000</yaxismax>
                            <show_work_period>1</show_work_period>
                            <show_triggers>1</show_triggers>
                            <type>0</type>
                            <show_legend>1</show_legend>
                            <show_3d>0</show_3d>
                            <percent_left>0.0000</percent_left>
                            <percent_right>0.0000</percent_right>
                            <ymin_type_1>1</ymin_type_1>
                            <ymax_type_1>0</ymax_type_1>
                            <ymin_item_1>0</ymin_item_1>
                            <ymax_item_1>0</ymax_item_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>0</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>0000C8</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.PutItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>C80000</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.DeleteItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>C800C8</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.UpdateItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>00C800</color>
                                    <yaxisside>1</yaxisside>
                                    <calc_fnc>7</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template AWS DynamoDB</host>
                                        <key>DynamoDB.BatchWriteItem.SuccessfulRequestLatency.Average[&quot;{#AWS_ACCOUNT}&quot;,&quot;{#AWS_REGION}&quot;,&quot;{#TABLE_NAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <host_prototypes/>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$AWS_ACCOUNT}</macro>
                    <value>awscore</value>
                </macro>
                <macro>
                    <macro>{$AWS_REGION}</macro>
                    <value>us-east-1</value>
                </macro>
                <macro>
                    <macro>{$COMPONENT_DYNAMODB}</macro>
                    <value>NOT SET</value>
                </macro>
                <macro>
                    <macro>{$COMPONENT}</macro>
                    <value>NOT SET</value>
                </macro>
                <macro>
                    <macro>{$PROV_THROUGHPUT_READ}</macro>
                    <value>5</value>
                </macro>
                <macro>
                    <macro>{$PROV_THROUGHPUT_WRITE}</macro>
                    <value>5</value>
                </macro>
                <macro>
                    <macro>{$TABLE_SIZE_BYTES}</macro>
                    <value>0.1</value>
                </macro>
                <macro>
                    <macro>{$TH_LATENCY_P3}</macro>
                    <value>200</value>
                </macro>
                <macro>
                    <macro>{$TH_LATENCY_P4}</macro>
                    <value>100</value>
                </macro>
                <macro>
                    <macro>{$TH_READ_THROTTLE_EVENTS_P3}</macro>
                    <value>200</value>
                </macro>
                <macro>
                    <macro>{$TH_READ_THROTTLE_EVENTS_P4}</macro>
                    <value>100</value>
                </macro>
                <macro>
                    <macro>{$TH_WRITE_THROTTLE_EVENTS_P3}</macro>
                    <value>100</value>
                </macro>
                <macro>
                    <macro>{$TH_WRITE_THROTTLE_EVENTS_P4}</macro>
                    <value>200</value>
                </macro>
                <macro>
                    <macro>{$TOTAL_RECORDS}</macro>
                    <value>0</value>
                </macro>
            </macros>
            <templates/>
            <screens>
                <screen>
                    <name>DynamoDB Statistics - Overview</name>
                    <hsize>1</hsize>
                    <vsize>7</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <style>0</style>
                            <url/>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <resource>
                                <name>{#TABLE_NAME}::Read Capacity</name>
                                <host>Template AWS DynamoDB</host>
                            </resource>
                            <max_columns>3</max_columns>
                            <application/>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <style>0</style>
                            <url/>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <resource>
                                <name>{#TABLE_NAME}::Read Latency</name>
                                <host>Template AWS DynamoDB</host>
                            </resource>
                            <max_columns>3</max_columns>
                            <application/>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <style>0</style>
                            <url/>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <resource>
                                <name>{#TABLE_NAME}::Write Capacity</name>
                                <host>Template AWS DynamoDB</host>
                            </resource>
                            <max_columns>3</max_columns>
                            <application/>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>3</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <style>0</style>
                            <url/>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <resource>
                                <name>{#TABLE_NAME}::Write Latency</name>
                                <host>Template AWS DynamoDB</host>
                            </resource>
                            <max_columns>3</max_columns>
                            <application/>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>4</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <style>0</style>
                            <url/>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <resource>
                                <name>{#TABLE_NAME}::Returned Item Rate</name>
                                <host>Template AWS DynamoDB</host>
                            </resource>
                            <max_columns>3</max_columns>
                            <application/>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>5</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <style>0</style>
                            <url/>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <resource>
                                <name>{#TABLE_NAME}::Throttled Events</name>
                                <host>Template AWS DynamoDB</host>
                            </resource>
                            <max_columns>3</max_columns>
                            <application/>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>6</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <style>0</style>
                            <url/>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <resource>
                                <name>{#TABLE_NAME}::Conditional Check Failed</name>
                                <host>Template AWS DynamoDB</host>
                            </resource>
                            <max_columns>3</max_columns>
                            <application/>
                        </screen_item>
                    </screen_items>
                </screen>
                <screen>
                    <name>DynamoDB Statistics - Read Operations</name>
                    <hsize>1</hsize>
                    <vsize>3</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <style>0</style>
                            <url/>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <resource>
                                <name>{#TABLE_NAME}::Read Latency</name>
                                <host>Template AWS DynamoDB</host>
                            </resource>
                            <max_columns>3</max_columns>
                            <application/>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <style>0</style>
                            <url/>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <resource>
                                <name>{#TABLE_NAME}::Throttled Read Requests</name>
                                <host>Template AWS DynamoDB</host>
                            </resource>
                            <max_columns>3</max_columns>
                            <application/>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <style>0</style>
                            <url/>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <resource>
                                <name>{#TABLE_NAME}::Read Errors</name>
                                <host>Template AWS DynamoDB</host>
                            </resource>
                            <max_columns>3</max_columns>
                            <application/>
                        </screen_item>
                    </screen_items>
                </screen>
                <screen>
                    <name>DynamoDB Statistics - Usage, Capacity and Throttles</name>
                    <hsize>1</hsize>
                    <vsize>1</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <style>0</style>
                            <url/>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <resource>
                                <name>{#TABLE_NAME}::Overview</name>
                                <host>Template AWS DynamoDB</host>
                            </resource>
                            <max_columns>3</max_columns>
                            <application/>
                        </screen_item>
                    </screen_items>
                </screen>
                <screen>
                    <name>DynamoDB Statistics - Write Operations</name>
                    <hsize>1</hsize>
                    <vsize>3</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <style>0</style>
                            <url/>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <resource>
                                <name>{#TABLE_NAME}::Write Latency</name>
                                <host>Template AWS DynamoDB</host>
                            </resource>
                            <max_columns>3</max_columns>
                            <application/>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <style>0</style>
                            <url/>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <resource>
                                <name>{#TABLE_NAME}::Throttled Write Requests</name>
                                <host>Template AWS DynamoDB</host>
                            </resource>
                            <max_columns>3</max_columns>
                            <application/>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <width>500</width>
                            <height>100</height>
                            <x>0</x>
                            <y>2</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>0</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <style>0</style>
                            <url/>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <resource>
                                <name>{#TABLE_NAME}::Write Errors</name>
                                <host>Template AWS DynamoDB</host>
                            </resource>
                            <max_columns>3</max_columns>
                            <application/>
                        </screen_item>
                    </screen_items>
                </screen>
            </screens>
        </template>
    </templates>
</zabbix_export>
